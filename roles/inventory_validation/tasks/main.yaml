---
- name: Assertion for HaProxy Single Mode
  assert:
    that:
      - "groups['haproxy'] | length == 1"
      - "groups['HAPROXY_PRIMARY'] | length == 1"
      - "groups['HAPROXY_SECONDARY'] | length == 0"
  when: SINGLE_HAPROXY | bool

- assert:
    { that: "'{{ SINGLE_HAPROXY }}' | bool "}
  when: SINGLE_HAPROXY | bool

- assert:
    { that: "not '{{ CLUSTER_HAPROXY }}' | bool"}
  when: SINGLE_HAPROXY | bool

- assert:
    { that: " '{{ HAPROXY_WEB_USER }}' "}
  when: WEB_ADMINISTRATION_HAPROXY_ENABLED | bool and SINGLE_HAPROXY | bool

- name: Assertion for Cluster HaProxy Mode
  assert:
    that:
      - "groups['haproxy'] | length == 2"
      - "groups['HAPROXY_PRIMARY'] | length == 1"
      - "groups['HAPROXY_SECONDARY'] | length == 1"
  when: CLUSTER_HAPROXY | bool

- assert:
    { that: " '{{ CLUSTER_HAPROXY }}' | bool"}
  when: CLUSTER_HAPROXY | bool

- assert:
    { that: "not '{{ SINGLE_HAPROXY }}' | bool "}
  when: CLUSTER_HAPROXY | bool

- assert:
    { that: " '{{ HAPROXY_WEB_USER }}' "}
  when: WEB_ADMINISTRATION_HAPROXY_ENABLED | bool and CLUSTER_HAPROXY | bool

- name: Assertion for Kubernetes Multi-Master
  assert:
    that:
      - "groups['KUBERNETES_MASTERS'] | length >= 1"
      - "groups['KUBERNETES_MASTER_INIT'] | length == 1"
      - "groups['KUBERNETES_NODES'] | length >= 1"
  when: MULTIMASTER_MODE | bool

- assert:
    { that: " '{{ MULTIMASTER_MODE }}' | bool" }
  when: MULTIMASTER_MODE | bool

- assert:
    { that: " not '{{ SINGLE_MODE }}' | bool" }
  when: MULTIMASTER_MODE | bool

- assert:
    { that: " '{{ LOADBALANCER }}' " }
  when: MULTIMASTER_MODE | bool

- assert:
    { that: " '{{ SECURITY_PORT }}' " }
  when: MULTIMASTER_MODE | bool

- assert:
    { that: " '{{ METALLB_RANGEIP_BEGIN }}' | length > 0"}
  when: MULTIMASTER_MODE | bool

- assert:
    { that: " '{{ METALLB_RANGEIP_END }}' | length > 0"}
  when: MULTIMASTER_MODE | bool

- name: Assertion for Kubernetes Single-Mode
  assert:
    that:
      - "groups['KUBERNETES_MASTER_INIT'] | length == 1"
      - "groups['KUBERNETES_MASTERS'] | length == 0"
      - "groups['KUBERNETES_NODES'] | length >= 1"
  when: SINGLE_MODE | bool

- assert:
    { that: " '{{ SINGLE_MODE }}' | bool" }
  when: SINGLE_MODE | bool

- assert:
    { that: " not '{{ MULTIMASTER_MODE }}' | bool" }
  when: SINGLE_MODE | bool

- assert:
    { that: " '{{ LOADBALANCER }}' " }
  when: SINGLE_MODE | bool

- assert:
    { that: " '{{ SECURITY_PORT }}' " }
  when: SINGLE_MODE | bool

- assert:
    { that: " '{{ METALLB_RANGEIP_BEGIN }}' | length > 0"}
  when: SINGLE_MODE | bool

- assert:
    { that: " '{{ METALLB_RANGEIP_END }}' | length > 0"}
  when: SINGLE_MODE | bool
