---
- name: Reseting Kube config on node
  shell: |
    kubeadm reset --force
  register: kubeadm_reset

- name: Coping kubeadm.yaml to /root
  template:
    src: kubeadm.yaml.j2
    dest: /root/kubeadm.yaml
    mode: 0644

- name: Inicializing Kubernetes cluster
  shell: |
    kubeadm init --config /root/kubeadm.yaml --upload-certs --ignore-preflight-errors=NumCPU
  register: kubeadm_init

- name: Ensuring .kube directory exists
  file:
    path: ~/.kube
    state: directory

- name: Symlinking kubectl admin.conf to ~/.kube/conf
  file:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    state: link

- name: Deploying WeaveNet Network (1/1)
  shell: |
    kubectl apply -f {{ default_kubernetes_cni_weavenet_manifestUrl }}

- name: Adding Metallb ConfigMap manifest to /root (1/4)
  template:
    src: metallb-cm.yaml.j2
    dest: /root/metallb-cm.yaml
    mode: 0644
  when: METALLB_ENABLED | bool

- name: Deploying Metallb manifest v0.9.6 (2/4)
  shell: | 
    kubectl apply -f {{ metallb_kubernetes_namespace_manifestUrl }}
  when: METALLB_ENABLED | bool

- name: Deploying Metallb manifest v0.9.6 (3/4)
  shell: | 
      kubectl apply -f {{ metallb_kubernetes_deploy_manifestUrl }}
  when: METALLB_ENABLED | bool

- name: Generating Metallb secret (4/4)
  shell: |
    kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
  when: METALLB_ENABLED | bool

- name: Deploying Metallb manifest v0.9.6 (4/4)
  shell: | 
    kubectl apply -f /root/metallb-cm.yaml
  when: METALLB_ENABLED | bool

- name: Deploying metric server v0.4.2 (1/1)
  shell: |
    kubectl apply -f {{ metric_server_kubernetes_deploy_manifestUrl }}

- name: Creating CA key
  shell: |
    kubeadm init phase upload-certs --upload-certs | grep -v certs
  register: K8S_KEY

- name: Creating plane join command
  shell: |
    kubeadm token create --print-join-command --certificate-key {{ K8S_KEY.stdout }}
  register: K8S_JOIN_MASTER

- name: Creating a worker join command
  shell: |
    kubeadm token create --print-join-command
  register: K8S_JOIN_NODE

- name: Adding K8S tokens to host holder
  add_host:
    name: K8S_TOKEN_HOLDER
    key: "{{ K8S_KEY.stdout }}"
    joink8smaster: "{{ K8S_JOIN_MASTER.stdout }}"
    joink8snode: "{{ K8S_JOIN_NODE.stdout }}"

- name: Waiting For 60 Seconds..
  wait_for:
    timeout: 60