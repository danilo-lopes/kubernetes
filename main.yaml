---
- name: Inventory Assertion
  hosts: localhost
  gather_facts: false
  roles:
  - {
      role: inventory_validation
  }

- name: Generating Environment Passwords
  hosts: localhost
  tasks:
  - add_host:
      name: env_passwords
      KEEP_AVALIVE_PASSWORD_AUTH: "{{ lookup('password', '/dev/null length=5') }}"
      HAPROXY_WEB_CONSOLE_PASSWORD: "{{ lookup('password', '/dev/null length=6') }}"
    when: CLUSTER_HAPROXY | bool or WEB_ADMINISTRATION_HAPROXY_ENABLED | bool

- name: Passwords
  hosts: localhost
  roles:
  - { role: passwords_generator,
      when: CLUSTER_HAPROXY | bool or WEB_ADMINISTRATION_HAPROXY_ENABLED | bool
  }

- hosts: HAPROXY_PRIMARY, HAPROXY_SECONDARY
  become: yes
  user: "{{ USER }}"
  roles:
  - {
      role: haproxy,
      when: HAPROXY_ENABLED | bool
  }

- hosts: KUBERNETES_MASTER_INIT, KUBERNETES_MASTERS, KUBERNETES_NODES
  become: yes
  user: "{{ USER }}"
  roles:
  - install_kubernetes

- hosts: KUBERNETES_MASTER_INIT
  become: yes
  user: "{{ USER }}"
  roles:
  - create_cluster

- hosts: KUBERNETES_MASTERS
  become: yes
  user: "{{ USER }}"
  roles:
  - {
      role: join_masters,
      when: KUBERNETES_MULTIMASTER_MODE | bool
  }

- hosts: KUBERNETES_NODES
  become: yes
  user: "{{ USER }}"
  roles:
  - join_nodes

- hosts: KUBERNETES_MASTER_INIT
  become: yes
  user: "{{ USER }}"
  roles:
  - {
      role: csr_approve,
      when: TLS_ENABLED | bool
  }

- hosts: KUBERNETES_MASTER_INIT, KUBERNETES_NODES
  become: yes
  user: "{{ USER }}"
  roles:
  - {
      role: reboot,
      when: KUBERNTES_SINGLE_MODE | bool and not KUBERNETES_MULTIMASTER_MODE | bool
  }

- hosts: KUBERNETES_MASTER_INIT, KUBERNETES_MASTERS, KUBERNETES_NODES
  become: yes
  user: "{{ USER }}"
  roles:
  - {
      role: reboot,
      when: KUBERNETES_MULTIMASTER_MODE | bool and not KUBERNTES_SINGLE_MODE | bool
  }